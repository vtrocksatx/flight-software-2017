#!/usr/bin/python2
# Copyright 2010, 2013 Nick Foster
# 
# Based on gr-air-modes modes_rx
# 
# gr-air-modes is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# gr-air-modes is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with gr-air-modes; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

from __future__ import print_function
from gnuradio.eng_option import eng_option
from gnuradio.gr.pubsub import pubsub
from optparse import OptionParser
import time, os, sys, threading, math
from string import split, join
import air_modes
from air_modes.types import *
from air_modes.exceptions import *
import zmq

#todo: maybe move plugins to separate programs (flightgear, SBS1, etc.)
def main():
  usage = "%prog: [options]"
  optparser = OptionParser(option_class=eng_option, usage=usage)
  air_modes.modes_radio.add_radio_options(optparser)
  (options, args) = optparser.parse_args()

  #construct the radio
  context = zmq.Context(1)
  tb = air_modes.modes_radio(options, context)
  servers = ["inproc://modes-radio-pub"]
  relay = air_modes.zmq_pubsub_iface(context, subaddr=servers, pubaddr=None)
  publisher = pubsub()
  def printer(data):
      print(data)
      sys.stdout.flush()
  relay.subscribe("dl_data", printer)

  tb.run()
  time.sleep(0.2)
  tb.close()
  time.sleep(0.2)
  relay.close()

if __name__ == '__main__':
  main()

